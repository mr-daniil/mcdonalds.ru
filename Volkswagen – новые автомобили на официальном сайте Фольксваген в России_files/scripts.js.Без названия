var _____WB$wombat$assign$function_____ = function(name) {return (self._wb_wombat && self._wb_wombat.local_init && self._wb_wombat.local_init(name)) || self[name]; };
if (!self.__WB_pmw) { self.__WB_pmw = function(obj) { this.__WB_source = obj; return this; } }
{
  let window = _____WB$wombat$assign$function_____("window");
  let self = _____WB$wombat$assign$function_____("self");
  let document = _____WB$wombat$assign$function_____("document");
  let location = _____WB$wombat$assign$function_____("location");
  let top = _____WB$wombat$assign$function_____("top");
  let parent = _____WB$wombat$assign$function_____("parent");
  let frames = _____WB$wombat$assign$function_____("frames");
  let opener = _____WB$wombat$assign$function_____("opener");

window["vw_kdx_js_bundle_plugged"] = true; window["vw_kdx_js_bundle_plugged"] = true; function getParam(name) { name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]"); var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"), results = regex.exec(location.search); return results === null ? false : decodeURIComponent(results[1].replace(/\+/g, " ")); } function getUrlParameter(sParam) { var sPageURL = decodeURIComponent(window.location.search.substring(1)), sURLVariables = sPageURL.split('&'), sParameterName, i; for (i = 0; i < sURLVariables.length; i++) { sParameterName = sURLVariables[i].split('='); if (sParameterName[0] === sParam) { return sParameterName[1] === undefined ? true : sParameterName[1]; } } } function KDXga_independent(cathegory,action,label,value,advancedSettingsJson) { if (typeof window.ga !== 'undefined') { var SEND_NAME = ga.getAll()[0].get('name'); window.dataLayer_kdx = window.dataLayer_kdx || []; if (typeof send === 'undefined') send = SEND_NAME ? SEND_NAME + '.send' : 'send'; if (typeof event === 'undefined' || true) event = 'event'; if (typeof cathegory === 'undefined') cathegory = 'VW_ALL'; if (typeof action === 'undefined') action = 'Default'; if (typeof label === 'undefined') label = ''; if (typeof value === 'undefined') value = undefined; if (typeof advancedSettingsJson === 'object') { window.dataLayer_kdx.push({ 'event': event, 'eventCategory': cathegory, 'eventAction': action, 'eventLabel': label, 'eventValue': value, 'advancedSettingsJson': advancedSettingsJson }); ga(send, event, cathegory, action, label, value, advancedSettingsJson); } else { window.dataLayer_kdx.push({ 'event': event, 'eventCategory': cathegory, 'eventAction': action, 'eventLabel': label, 'eventValue': value, }); ga(send, event, cathegory, action, label, value); } console.log('ga', send, event, cathegory, action, label); }else{ console.log('undefined object ga', send, event, cathegory, action, label); } } function KDXgetModelLabelFromStr(str) { var patterns = { 'olf' : 'Golf', 'olo' : 'Polo', 'assat' : 'Passat', 'etta' : 'Jetta', 'iguan' : 'Tiguan', 'eramont' : 'Teramont', 'ouareg' : 'Touareg new', 'addy' : 'Caddy', 'marok' : 'Amarok', 'ultivan' : 'Multivan', 'alifornia' : 'California', 'aravelle' : 'Caravelle', 'ransporter' : 'Transporter' }; var result = 'not_set'; for (var key in patterns) { if(patterns.hasOwnProperty(key) && str.indexOf(key) > -1 ) { result = patterns[key]; } } return result; } function KDXawaitChange(type,expression,callback,callback_arguments) { var clock = 100; switch (type) { case 'appeared_block_with_id': console.log('WARN KDXawaitChange: Type not implemented yet.'); break; case 'appeared_block_with_class': (function(){ if(typeof expression.blockClasses !== 'object' || expression.blockClasses.length < 1) { console.log('ERROR KDXawaitChange: Expression incorrect for type '+type+'.'); return; } var classFull = ''; for (var key in expression.blockClasses) { classFull += '.'+ expression.blockClasses[key]; } var wheel = setInterval(function(){ var fullfield = true; if($(classFull).length < 1) { fullfield = false; } if(fullfield){ clearInterval(wheel); if(typeof callback_arguments === 'function') { callback_arguments = callback_arguments(); } if(typeof callback === 'function') { callback.apply(window,callback_arguments); } if(typeof callback === 'string') { var cb = window[callback]; cb.apply(window,callback_arguments); } } }, clock); }()); break; case 'appeared_block_with_text': console.log('WARN KDXawaitChange: Type not implemented yet.'); break; case 'appeared_variable': console.log('WARN KDXawaitChange: Type not implemented yet.'); break; case 'appeared_function': console.log('WARN KDXawaitChange: Type not implemented yet.'); break; case 'fullfield_function': console.log('WARN KDXawaitChange: Type not implemented yet.'); break; case 'url_changed_dynamically_tpl': if(typeof expression.patterns !== 'object' || expression.patterns.length < 1) { console.log('ERROR KDXawaitChange: Expression incorrect for type '+type+'.'); return; } var wheel = setInterval(function(){ var fullfield = true; for (var key in expression.patterns) { if(!(window.location.href.indexOf(expression.patterns[key]) > -1)) { fullfield = false; } } if(fullfield){ clearInterval(wheel); if(typeof callback_arguments === 'function') { callback_arguments = callback_arguments(); } if(typeof callback === 'function') { callback.apply(window,callback_arguments); } if(typeof callback === 'string') { var cb = window[callback]; cb.apply(window,callback_arguments); } } }, clock); break; default: console.log('WARN KDXawaitChange: Unknown type argument.'); return; } } if(self == top) { if((window.location.href.indexOf("/ru/digitaldealers.html") > -1)) { var KDX_TAG_JQ_WHEEL_796916 = setInterval(function(){ if(typeof($) !== 'undefined'){ clearInterval(KDX_TAG_JQ_WHEEL_796916); try { console.log(cache.count); } catch (e) { if(window.location.href.indexOf('KDX_JS_BUNDLE_TEST') > -1){ console.log('tag with id 796916 error: ', e); } } } },250); } } if(window.location.href.indexOf("KDX_JS_BUNDLE_TEST") > -1){ console.log("tag with id 797800 is invalid! Check tag settings."); } if(self == top) { var KDX_TAG_JQ_WHEEL_796906 = setInterval(function(){ if(typeof($) !== 'undefined'){ clearInterval(KDX_TAG_JQ_WHEEL_796906); try { var _tmr = window._tmr || (window._tmr = []); _tmr.push({id: "3033301", type: "pageView", start: (new Date()).getTime()}); (function (d, w, id) { if (d.getElementById(id)) return; var ts = d.createElement("script"); ts.type = "text/javascript"; ts.async = true; ts.id = id; ts.src = "https://web.archive.org/web/20220907133817/https://top-fwz1.mail.ru/js/code.js"; var f = function () {var s = d.getElementsByTagName("script")[0]; s.parentNode.insertBefore(ts, s);}; if (w.opera == "[object Opera]") { d.addEventListener("DOMContentLoaded", f, false); } else { f(); } })(document, window, "topmailru-code"); !function(){var t=document.createElement("script");t.type="text/javascript",t.async=!0,t.src="https://web.archive.org/web/20220907133817/https://vk.com/js/api/openapi.js?167",t.onload=function(){VK.Retargeting.Init("VK-RTRG-464335-fhsgG"),VK.Retargeting.Hit()},document.head.appendChild(t)}(); } catch (e) { if(window.location.href.indexOf('KDX_JS_BUNDLE_TEST') > -1){ console.log('tag with id 796906 error: ', e); } } } },250); } if(self == top) { if((window.location.href.indexOf("contactless-service") > -1)) { var KDX_TAG_JQ_WHEEL_796936 = setInterval(function(){ if(typeof($) !== 'undefined'){ clearInterval(KDX_TAG_JQ_WHEEL_796936); try { function stagespace() { var Element = document.querySelector('div.StyledContainer-sc-18harj2.gjSzyB'); Element.style.paddingTop = "100px"; }; setTimeout(stagespace, 3000); } catch (e) { if(window.location.href.indexOf('KDX_JS_BUNDLE_TEST') > -1){ console.log('tag with id 796936 error: ', e); } } } },250); } } if(self == top) { if((window.location.href.indexOf("/zapros-predlozheniya/") > -1 || window.location.href.indexOf("/test-drive/") > -1)) { try { function dcc_header() { var dccheader = document.querySelector('header.efIFVc'); dccheader.setAttribute("style", "margin-top: 150px;"); } setTimeout(dcc_header, 1000) } catch (e) { if(window.location.href.indexOf('KDX_JS_BUNDLE_TEST') > -1){ console.log('tag with id 797000 error: ', e); } } } } if(self == top) { if((window.location.href.indexOf("/ru.html") > -1)) { try { var testcss_1 = '\n' + '.StyledContainer-sc-18harj2.gjSzyB {padding-top: 120px;} \n'; var obj_css_1 = document.createElement('style'); obj_css_1.type = 'text/css'; obj_css_1.innerHTML = testcss_1; document.body.appendChild(obj_css_1); } catch (e) { if(window.location.href.indexOf('KDX_JS_BUNDLE_TEST') > -1){ console.log('tag with id 797398 error: ', e); } } } } if(self == top) { var KDX_TAG_JQ_WHEEL_797418 = setInterval(function(){ if(typeof($) !== 'undefined'){ clearInterval(KDX_TAG_JQ_WHEEL_797418); try { var testcss_2 = '\n' + '.StyledDisclaimersWrapper-pYfuE { \n' + 'width:80% !important; \n' + '} \n'; var obj_css_2 = document.createElement('style'); obj_css_2.type = 'text/css'; obj_css_2.innerHTML = testcss_2; document.body.appendChild(obj_css_2); } catch (e) { if(window.location.href.indexOf('KDX_JS_BUNDLE_TEST') > -1){ console.log('tag with id 797418 error: ', e); } } } },250); }
if(window.location.href.indexOf("KDX_JS_BUNDLE_TEST") > -1){ console.log("pkw js bundle got from cache in 1.7088530063629 s"); } 

}
/*
     FILE ARCHIVED ON 13:38:17 Sep 07, 2022 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 12:53:08 Apr 08, 2025.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/
/*
playback timings (ms):
  captures_list: 1.561
  exclusion.robots: 0.019
  exclusion.robots.policy: 0.008
  esindex: 0.011
  cdx.remote: 28.611
  LoadShardBlock: 221.519 (3)
  PetaboxLoader3.datanode: 236.343 (4)
  load_resource: 194.392
  PetaboxLoader3.resolve: 123.16
*/